use redstone_rust_sdk;
use std::convert::TryInto;
use std::{fmt::Write, num::ParseIntError};

// const EXPECTED_SERIALIZED_UNSIGNED_DATA_PACKAGE =
//   "0x" +
//   "4254430000000000000000000000000000000000000000000000000000000000" + // bytes32("BTC")
//   "000000000000000000000000000000000000000000000000000003d1e3821000" + // 42000 * 10^8
//   "4554480000000000000000000000000000000000000000000000000000000000" + // bytes32("ETH")
//   "0000000000000000000000000000000000000000000000000000002e90edd000" + // 2000 * 10^8
//   "01812f2590c0" + // timestamp
//   "00000020" + // data points value byte size (32 in hex)
//   "000002"; // data points count

pub fn decode_hex(s: &str) -> Result<Vec<u8>, ParseIntError> {
  (0..s.len())
    .step_by(2)
    .map(|i| u8::from_str_radix(&s[i..i + 2], 16))
    .collect()
}

pub fn encode_hex(bytes: &[u8]) -> String {
  let mut s = String::with_capacity(bytes.len() * 2);
  for &b in bytes {
    write!(&mut s, "{:02x}", b).unwrap();
  }
  s
}

#[test]
fn it_gets_oracle_value() {
  let redstone_payload_vec = decode_hex("4254430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003d1e382100045544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e90edd00001812f2590c000000020000002c1296a449f5d353c8b04eb389f33a583ee79449cca6e366900042f19f2521e722a410929223231905839c00865af68738f1a202478d87dc33675ea5824f343901b4254430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003d1e382100045544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e90edd00001812f2590c000000020000002dbbf8a0e6b1c9a56a4a0ef7089ef2a3f74fbd21fbd5c7c8192b70084004b4f6d37427507c4fff835f74fd4d000b6830ed296e207f49831b96f90a4f4e60820ee1c0002312e312e3223746573742d646174612d66656564000014000002ed57011e0000").unwrap();
  let data_feed_id_vec =
    decode_hex("4254430000000000000000000000000000000000000000000000000000000000").unwrap();
  let data_feed_id: [u8; 32] = data_feed_id_vec.try_into().unwrap();
  let oracle_value = redstone_rust_sdk::get_oracle_value(&redstone_payload_vec, &data_feed_id);
  assert_eq!(42, oracle_value);
}
